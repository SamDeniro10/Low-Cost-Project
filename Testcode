#include <Wire.h>
#include "SensirionI2CSen5x.h"

// SEN55-Sensor
SensirionI2CSen5x sen55Sensor;

// Funktion zur Umrechnung von Partikelmasse (µg/m³) in Partikelanzahl (Partikel/m³)
float masseZuAnzahl(float masse, float radius) {
    const float dichte = 1.65; // Dichte in g/cm³
    const float pi = 3.14159;

    // Radius von µm in cm umrechnen
    float radius_cm = radius * 1e-4;

    // Volumen eines Partikels berechnen
    float volumen = (4.0 / 3.0) * pi * pow(radius_cm, 3);

    // Masse eines Partikels berechnen
    float partikel_masse = dichte * volumen * 1e6; // Masse in µg

    // Partikelanzahl berechnen
    return masse / partikel_masse;
}

void setup() {
    // Serielle Verbindung starten
    Serial.begin(115200);
    Wire.begin();

    // SEN55-Sensor initialisieren
    Serial.println("SEN55-Sensor wird initialisiert...");
    sen55Sensor.begin(Wire);
    uint16_t error = sen55Sensor.deviceReset();
    if (error) {
        Serial.println("Fehler bei der Initialisierung des Sensors.");
        while (true); // Stoppt den Code, wenn der Sensor nicht initialisiert werden kann
    }

    Serial.println("SEN55-Sensor erfolgreich initialisiert.");
}

void loop() {
    // Variablen für die Sensordaten
    float temperatur, luftfeuchtigkeit, pm1p0, pm2p5, pm4p0, pm10p0;
    float vocIndex, noxIndex;

    // Sensordaten lesen
    uint16_t error = sen55Sensor.readMeasuredValues(pm1p0, pm2p5, pm4p0, pm10p0, temperatur, luftfeuchtigkeit, vocIndex, noxIndex);
    if (error) {
        Serial.println("Fehler beim Lesen der Sensordaten.");
    } else {
        // Partikelanzahl berechnen
        float pm1_anzahl = masseZuAnzahl(pm1p0, 0.5);    // PM1.0 (Radius 0,5 µm)
        float pm2_5_anzahl = masseZuAnzahl(pm2p5, 1.25); // PM2.5 (Radius 1,25 µm)
        float pm4_anzahl = masseZuAnzahl(pm4p0, 2.0);    // PM4.0 (Radius 2,0 µm)
        float pm10_anzahl = masseZuAnzahl(pm10p0, 5.0);  // PM10 (Radius 5,0 µm)

        // Messwerte auf dem Serial Monitor ausgeben
        Serial.println("----- Sensordaten -----");
        Serial.print("Temperatur: ");
        Serial.print(temperatur, 2);
        Serial.println(" °C");

        Serial.print("Luftfeuchtigkeit: ");
        Serial.print(luftfeuchtigkeit, 2);
        Serial.println(" %");

        Serial.print("PM1.0 Anzahl: ");
        Serial.print(pm1_anzahl, 2);
        Serial.println(" Partikel/m³");

        Serial.print("PM2.5 Anzahl: ");
        Serial.print(pm2_5_anzahl, 2);
        Serial.println(" Partikel/m³");

        Serial.print("PM4.0 Anzahl: ");
        Serial.print(pm4_anzahl, 2);
        Serial.println(" Partikel/m³");

        Serial.print("PM10 Anzahl: ");
        Serial.print(pm10_anzahl, 2);
        Serial.println(" Partikel/m³");

        Serial.println("-----------------------\n");
    }

    // 5 Sekunden warten, bevor die nächste Messung durchgeführt wird
    delay(5000);
}
